// Copyright (c) 2023 dingodb.com, Inc. All Rights Reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "common.proto";
import "error.proto";

package dingodb.pb.store;

option java_package = "io.dingodb.store";
option cc_generic_services = true;

message AddRegionRequest {
  dingodb.pb.common.Region region = 1;
}

message AddRegionResponse {
  dingodb.pb.error.Error error = 1;
}

message ChangeRegionRequest {
  dingodb.pb.common.Region region = 1;
}

message ChangeRegionResponse {
  dingodb.pb.error.Error error = 1;
}

message DestroyRegionRequest {
  uint64 region_id = 1;
}

message DestroyRegionResponse {
  dingodb.pb.error.Error error = 1;
}

message KvGetRequest {
  uint64 region_id = 1;
  bytes key = 2;
}

message KvGetResponse {
  dingodb.pb.error.Error error = 1;
  bytes value = 2;
}

message KvBatchGetRequest {
  uint64 region_id = 1;
  repeated bytes keys = 2;
}

message KvBatchGetResponse {
  dingodb.pb.error.Error error = 1;
  repeated dingodb.pb.common.KeyValue kvs = 2;
}

message KvPutRequest {
  uint64 region_id = 1;
  dingodb.pb.common.KeyValue kv = 2;
}

message KvPutResponse {
  dingodb.pb.error.Error error = 1;
}

message KvBatchPutRequest {
  uint64 region_id = 1;
  repeated dingodb.pb.common.KeyValue kvs = 2;
}

message KvBatchPutResponse {
  dingodb.pb.error.Error error = 1;
}

message KvPutIfAbsentRequest {
  uint64 region_id = 1;
  dingodb.pb.common.KeyValue kv = 2;
}

message KvPutIfAbsentResponse {
  dingodb.pb.error.Error error = 1;
}

message KvBatchPutIfAbsentRequest {
  uint64 region_id = 1;
  repeated dingodb.pb.common.KeyValue kvs = 2;
}

message KvBatchPutIfAbsentResponse {
  dingodb.pb.error.Error error = 1;
}

message KvBatchDeleteRequest {
  uint64 region_id = 1;
  repeated bytes keys = 2;
}

message KvBatchDeleteResponse {
  dingodb.pb.error.Error error = 1;
}

service StoreService {
  // region
  rpc AddRegion(AddRegionRequest) returns (AddRegionResponse);
  rpc ChangeRegion(ChangeRegionRequest) returns (ChangeRegionResponse);
  rpc DestroyRegion(DestroyRegionRequest) returns (DestroyRegionResponse);

  // kv
  rpc KvGet(KvGetRequest) returns (KvGetResponse);
  rpc KvBatchGet(KvBatchGetRequest) returns (KvBatchGetResponse);
  rpc KvPut(KvPutRequest) returns (KvPutResponse);
  rpc KvBatchPut(KvBatchPutRequest) returns (KvBatchPutResponse);
  rpc KvPutIfAbsent(KvPutIfAbsentRequest) returns (KvPutIfAbsentResponse);
  rpc KvBatchPutIfAbsent(KvBatchPutIfAbsentRequest) returns (KvBatchPutIfAbsentResponse);
  rpc KvBatchDelete(KvBatchDeleteRequest) returns (KvBatchDeleteResponse);
};
