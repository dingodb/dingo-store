name: CMake_centos7

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    # get docker contatiner
    container: 
      image: dingodatabase/dingo-store-centos-7-dev:latest

    steps:
    - uses: actions/checkout@v3

    - name: Set Safe Dir
      run: git config --global --add safe.directory $PWD 

    - name: Clone Submodule
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: git submodule update --init --recursive

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run:  cmake -B ./build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DROCKSDB_PROTABLE_OPTION=1

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ./build --config ${{env.BUILD_TYPE}}
    

