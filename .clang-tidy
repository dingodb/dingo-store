# Enable all checks + disale selected checks. Feel free to remove disabled checks from below list if
# a) the new check is not controversial (this includes many checks in readability-* and google-*) or
# b) too noisy (checks with > 100 new warnings are considered noisy, this includes e.g. cppcoreguidelines-*).
Checks: "*,
  -abseil-*,

  -altera-*,

  -android-*,

  -google-*,

  -bugprone-branch-clone,
  -bugprone-easily-swappable-parameters,
  -bugprone-exception-escape,
  -bugprone-implicit-widening-of-multiplication-result,
  -bugprone-narrowing-conversions,
  -bugprone-not-null-terminated-result,

  -cert-dcl16-c,
  -cert-err58-cpp,
  -cert-msc32-c,
  -cert-msc51-cpp,
  -cert-oop54-cpp,
  -cert-oop57-cpp,

  -clang-analyzer-optin.performance.Padding,
  -clang-analyzer-optin.portability.UnixAPI,

  -clang-analyzer-security.insecureAPI.bzero,
  -clang-analyzer-security.insecureAPI.strcpy,

  -cppcoreguidelines-avoid-c-arrays,
  -cppcoreguidelines-avoid-goto,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-avoid-non-const-global-variables,
  -cppcoreguidelines-explicit-virtual-functions,
  -cppcoreguidelines-init-variables,
  -cppcoreguidelines-interfaces-global-init,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-narrowing-conversions,
  -cppcoreguidelines-no-malloc,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -cppcoreguidelines-owning-memory,
  -cppcoreguidelines-prefer-member-initializer,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-bounds-constant-array-index,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-type-const-cast,
  -cppcoreguidelines-pro-type-cstyle-cast,
  -cppcoreguidelines-pro-type-member-init,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-pro-type-static-cast-downcast,
  -cppcoreguidelines-pro-type-union-access,
  -cppcoreguidelines-pro-type-vararg,
  -cppcoreguidelines-slicing,
  -cppcoreguidelines-special-member-functions,
  -cppcoreguidelines-avoid-do-while,
  -cppcoreguidelines-avoid-const-or-ref-data-members,

  -concurrency-mt-unsafe,

  -darwin-*,

  -fuchsia-*,

  -google-build-using-namespace,
  -google-readability-braces-around-statements,
  -google-readability-casting,
  -google-readability-function-size,
  -google-readability-namespace-comments,
  -google-readability-todo,
  -google-upgrade-googletest-case,

  -hicpp-avoid-c-arrays,
  -hicpp-avoid-goto,
  -hicpp-braces-around-statements,
  -hicpp-explicit-conversions,
  -hicpp-function-size,
  -hicpp-member-init,
  -hicpp-move-const-arg,
  -hicpp-multiway-paths-covered,
  -hicpp-named-parameter,
  -hicpp-no-array-decay,
  -hicpp-no-assembler,
  -hicpp-no-malloc,
  -hicpp-signed-bitwise,
  -hicpp-special-member-functions,
  -hicpp-uppercase-literal-suffix,
  -hicpp-use-auto,
  -hicpp-use-emplace,
  -hicpp-vararg,

  -linuxkernel-*,

  -llvm-*,

  -llvmlibc-*,

  -openmp-*,

  -misc-no-recursion,
  -misc-non-private-member-variables-in-classes,
  -misc-use-anonymous-namespace,

  -modernize-avoid-c-arrays,
  -modernize-concat-nested-namespaces,
  -modernize-pass-by-value,
  -modernize-return-braced-init-list,
  -modernize-use-auto,
  -modernize-use-default-member-init,
  -modernize-use-emplace,
  -modernize-use-nodiscard,
  -modernize-use-override,
  -modernize-use-trailing-return-type,

  -performance-inefficient-string-concatenation,
  -performance-no-int-to-ptr,
  -performance-unnecessary-value-param,

  -portability-simd-intrinsics,

  -readability-braces-around-statements,
  -readability-else-after-return,
  -readability-function-cognitive-complexity,
  -readability-function-size,
  -readability-identifier-length,
  -readability-implicit-bool-conversion,
  -readability-isolate-declaration,
  -readability-magic-numbers,
  -readability-named-parameter,
  -readability-redundant-declaration,
  -readability-static-accessed-through-instance,
  -readability-suspicious-call-argument,
  -readability-uppercase-literal-suffix,
  -readability-use-anyofallof,

  -zirkon-*,
  "

WarningsAsErrors: "*"

CheckOptions:
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.ClassMemberCase
    value: lower_case
  - key: readability-identifier-naming.ConstexprVariableCase
    value: CamelCase
  - key: readability-identifier-naming.ConstexprVariablePrefix
    value: k
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.EnumConstantCase
    value: CamelCase
  - key: readability-identifier-naming.EnumConstantPrefix
    value: k
  - key: readability-identifier-naming.FunctionCase
    value: CamelCase
  - key: readability-identifier-naming.GlobalConstantCase
    value: CamelCase
  - key: readability-identifier-naming.GlobalConstantPrefix
    value: k
  - key: readability-identifier-naming.StaticConstantCase
    value: CamelCase
  - key: readability-identifier-naming.StaticConstantPrefix
    value: k
  - key: readability-identifier-naming.StaticVariableCase
    value: lower_case
  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE
  - key: readability-identifier-naming.MacroDefinitionIgnoredRegexp
    value: "^[A-Z]+(_[A-Z]+)*_$"
  - key: readability-identifier-naming.MemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: _
  - key: readability-identifier-naming.PublicMemberSuffix
    value: ""
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  - key: readability-identifier-naming.ParameterCase
    value: lower_case
  - key: readability-identifier-naming.TypeAliasCase
    value: CamelCase
  - key: readability-identifier-naming.TypedefCase
    value: CamelCase
  - key: readability-identifier-naming.VariableCase
    value: lower_case
  - key: readability-identifier-naming.IgnoreMainLikeFunctions
    value: 1
